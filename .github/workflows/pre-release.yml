name: Pre-Release

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  create-pre-release:
    name: Create Pre-Release
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Retrieve Version
        id: version
        run: echo "value=$(node -pe 'require("./package.json").version')-dev.${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs').promises;

            const { repo: { owner, repo }, sha } = context;

            try {
              const releases = await github.rest.repos.listReleases({
                owner: owner,
                repo: repo,
              });
              console.log('All releases:', releases.data);

              const preReleases = releases.data.filter((release) => release.name && release.name.includes('3.0.0') && release.prerelease);

              console.log('Releases found:', preReleases.map((release) => release.name));
            } catch (error) {
              console.error(error);
              core.setFailed('Failed to remove pre-releases');
            }
    outputs:
      version: ${{ steps.version.outputs.value }}
